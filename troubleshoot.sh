#!/usr/bin/env bash
set -euo pipefail

# troubleshoot.sh - Diagn√≥stico e solu√ß√µes para Yabai/Skhd

red()   { printf "\033[31m%s\033[0m\n" "$*"; }
green() { printf "\033[32m%s\033[0m\n" "$*"; }
yellow(){ printf "\033[33m%s\033[0m\n" "$*"; }
blue()  { printf "\033[34m%s\033[0m\n" "$*"; }
info()  { printf "‚Ä¢ %s\n" "$*"; }

banner() {
cat <<'EOF'
üîß YABAL-RAMOS TROUBLESHOOT
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
EOF
}

check_installation() {
  blue "1. VERIFICANDO INSTALA√á√ÉO..."
  
  if command -v yabai >/dev/null 2>&1; then
    green "‚úÖ Yabai instalado: $(yabai --version)"
  else
    red "‚ùå Yabai n√£o encontrado"
    yellow "üí° Execute: brew install koekeishiya/formulae/yabai"
  fi
  
  if command -v skhd >/dev/null 2>&1; then
    green "‚úÖ Skhd instalado: $(skhd --version)"
  else
    red "‚ùå Skhd n√£o encontrado"
    yellow "üí° Execute: brew install koekeishiya/formulae/skhd"
  fi
  echo
}

check_services() {
  blue "2. VERIFICANDO SERVI√áOS..."
  
  if launchctl list | grep -q com.koekeishiya.yabai; then
    green "‚úÖ Servi√ßo Yabai ativo"
  else
    red "‚ùå Servi√ßo Yabai inativo"
    yellow "üí° Execute: yabai --start-service"
  fi
  
  if launchctl list | grep -q com.koekeishiya.skhd; then
    green "‚úÖ Servi√ßo Skhd ativo"
  else
    red "‚ùå Servi√ßo Skhd inativo"
    yellow "üí° Execute: skhd --start-service"
  fi
  echo
}

check_permissions() {
  blue "3. VERIFICANDO PERMISS√ïES..."
  
  if yabai -m signal --list >/dev/null 2>&1; then
    green "‚úÖ Yabai tem permiss√µes de Acessibilidade"
  else
    red "‚ùå Yabai SEM permiss√µes de Acessibilidade"
    yellow "üí° Execute: ./grant-accessibility.sh ou ./auto-grant-accessibility.sh"
  fi
  
  if pgrep -x skhd >/dev/null; then
    green "‚úÖ Skhd est√° rodando"
  else
    red "‚ùå Skhd n√£o est√° rodando"
    yellow "üí° Verifique ~/.skhdrc e execute: skhd --restart-service"
  fi
  echo
}

check_configs() {
  blue "4. VERIFICANDO CONFIGURA√á√ïES..."
  
  if [[ -f ~/.yabairc ]]; then
    green "‚úÖ ~/.yabairc existe"
    if [[ -x ~/.yabairc ]]; then
      green "‚úÖ ~/.yabairc √© execut√°vel"
    else
      yellow "‚ö†Ô∏è  ~/.yabairc n√£o √© execut√°vel"
      yellow "üí° Execute: chmod +x ~/.yabairc"
    fi
  else
    red "‚ùå ~/.yabairc n√£o encontrado"
    yellow "üí° Crie um arquivo de configura√ß√£o b√°sico"
  fi
  
  if [[ -f ~/.skhdrc ]]; then
    green "‚úÖ ~/.skhdrc existe"
  else
    red "‚ùå ~/.skhdrc n√£o encontrado"
    yellow "üí° Execute: cp /opt/homebrew/opt/skhd/share/skhd/examples/skhdrc ~/.skhdrc"
  fi
  echo
}

check_system() {
  blue "5. VERIFICANDO SISTEMA..."
  
  local macos_version=$(sw_vers -productVersion)
  info "macOS: $macos_version"
  
  if csrutil status | grep -q "System Integrity Protection status: enabled"; then
    yellow "‚ö†Ô∏è  SIP habilitado (pode limitar algumas funcionalidades)"
  else
    info "SIP desabilitado"
  fi
  
  if [[ -r "/Library/Application Support/com.apple.TCC/TCC.db" ]]; then
    green "‚úÖ Terminal tem Full Disk Access"
  else
    red "‚ùå Terminal SEM Full Disk Access"
    yellow "üí° Configura√ß√µes ‚Üí Privacidade ‚Üí Acesso Total ao Disco ‚Üí Adicionar Terminal"
  fi
  echo
}

show_common_solutions() {
  blue "6. SOLU√á√ïES COMUNS..."
  
  cat <<'SOLUTIONS'
üîß PROBLEMAS FREQUENTES:

‚ùå Yabai n√£o responde:
   ‚Üí sudo yabai --load-sa
   ‚Üí yabai --restart-service

‚ùå Skhd n√£o funciona:
   ‚Üí Verificar ~/.skhdrc (sem erros de sintaxe)
   ‚Üí skhd --restart-service

‚ùå Permiss√µes negadas:
   ‚Üí ./grant-accessibility.sh (m√©todo manual)
   ‚Üí ./auto-grant-accessibility.sh (m√©todo autom√°tico)

‚ùå Servi√ßos n√£o iniciam:
   ‚Üí killall yabai skhd
   ‚Üí yabai --start-service && skhd --start-service

‚ùå Configura√ß√£o n√£o carrega:
   ‚Üí chmod +x ~/.yabairc
   ‚Üí Verificar sintaxe do arquivo

‚ùå Brew n√£o encontra formulae:
   ‚Üí brew tap koekeishiya/formulae
   ‚Üí brew update

üîÑ RESET COMPLETO:
   ‚Üí yabai --stop-service && skhd --stop-service
   ‚Üí rm -f ~/.yabairc ~/.skhdrc
   ‚Üí ./install.sh

SOLUTIONS
}

show_logs() {
  blue "7. VERIFICANDO LOGS..."
  
  echo "üìã Logs recentes do Yabai:"
  tail -n 5 /tmp/yabai_*.log 2>/dev/null || echo "  Nenhum log encontrado"
  
  echo
  echo "üìã Logs recentes do Skhd:"
  tail -n 5 /tmp/skhd_*.log 2>/dev/null || echo "  Nenhum log encontrado"
  echo
}

interactive_fix() {
  blue "8. CORRE√á√ÉO INTERATIVA..."
  
  echo "Deseja tentar uma corre√ß√£o autom√°tica? (y/n)"
  read -r response
  
  if [[ "$response" =~ ^[Yy]$ ]]; then
    info "Reiniciando servi√ßos..."
    yabai --restart-service 2>/dev/null || yabai --start-service
    skhd --restart-service 2>/dev/null || skhd --start-service
    
    sleep 3
    
    info "Testando novamente..."
    if yabai -m signal --list >/dev/null 2>&1; then
      green "‚úÖ Problema resolvido!"
    else
      red "‚ùå Problema persiste. Consulte as solu√ß√µes acima."
    fi
  fi
}

main() {
  banner
  echo
  
  check_installation
  check_services
  check_permissions
  check_configs
  check_system
  show_common_solutions
  show_logs
  interactive_fix
}

main "$@"